import { useContext, useEffect } from 'react';
import { KeyboardContext } from './context';
import { AndroidSoftInputModes, KeyboardController } from './native';
import { uuid } from './utils';
export const useResizeMode = () => {
  useEffect(() => {
    KeyboardController.setInputMode(AndroidSoftInputModes.SOFT_INPUT_ADJUST_RESIZE);
    return () => KeyboardController.setDefaultMode();
  }, []);
};
export const useKeyboardAnimation = () => {
  useResizeMode();
  const context = useContext(KeyboardContext);
  return context.animated;
};
export const useReanimatedKeyboardAnimation = () => {
  useResizeMode();
  const context = useContext(KeyboardContext);
  return context.reanimated;
};
export function useGenericKeyboardHandler(handler, deps) {
  const context = useContext(KeyboardContext);
  useEffect(() => {
    const key = uuid();
    context.setHandlers({
      [key]: handler
    });
    return () => {
      context.setHandlers({
        [key]: undefined
      });
    };
  }, deps);
}
export function useKeyboardHandler(handler, deps) {
  useResizeMode();
  useGenericKeyboardHandler(handler, deps);
}
//# sourceMappingURL=hooks.js.map