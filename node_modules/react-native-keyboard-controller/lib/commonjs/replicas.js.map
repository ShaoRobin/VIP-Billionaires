{"version":3,"names":["availableOSEventType","Platform","OS","defaultAndroidEasing","Easing","bezier","useKeyboardAnimationReplica","height","useRef","Animated","Value","progress","animation","useMemo","current","useEffect","KeyboardController","setInputMode","AndroidSoftInputModes","SOFT_INPUT_ADJUST_RESIZE","setDefaultMode","listener","Keyboard","addListener","e","timing","toValue","endCoordinates","duration","easing","useNativeDriver","start","remove","IOS_SPRING_CONFIG","damping","stiffness","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","useReanimatedKeyboardAnimationReplica","useSharedValue","heightEvent","useDerivedValue","value","handler","useWorkletCallback","_height","useAnimatedReaction","_keyboardHeight","result","_previousResult","_previousKeyboardHeight","withSpring","show","runOnUI","hide","useGradualKeyboardAnimation","useReanimatedKeyboardAnimation"],"sources":["replicas.ts"],"sourcesContent":["import { useRef, useEffect, useMemo } from 'react';\nimport { Animated, Easing, Keyboard, Platform } from 'react-native';\nimport {\n  runOnUI,\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n  useWorkletCallback,\n  withSpring,\n} from 'react-native-reanimated';\nimport { useReanimatedKeyboardAnimation } from './hooks';\n\nimport { AndroidSoftInputModes, KeyboardController } from './native';\n\nconst availableOSEventType = Platform.OS === 'ios' ? 'Will' : 'Did';\n\n// cubic-bezier(.17,.67,.34,.94)\nexport const defaultAndroidEasing = Easing.bezier(0.4, 0.0, 0.2, 1);\ntype KeyboardAnimation = {\n  progress: Animated.Value;\n  height: Animated.Value;\n};\n\n/**\n * An experimental implementation of tracing keyboard appearance.\n * Switch an input mode to adjust resize mode. In this case all did* events\n * are triggering before keyboard appears, and using some approximations\n * it tries to mimicries a native transition.\n *\n * @returns {Animated.Value}\n */\nexport const useKeyboardAnimationReplica = (): KeyboardAnimation => {\n  const height = useRef(new Animated.Value(0));\n  const progress = useRef(new Animated.Value(0));\n  const animation = useMemo(\n    () => ({\n      height: height.current,\n      progress: progress.current,\n    }),\n    []\n  );\n\n  useEffect(() => {\n    KeyboardController.setInputMode(\n      AndroidSoftInputModes.SOFT_INPUT_ADJUST_RESIZE\n    );\n\n    return () => KeyboardController.setDefaultMode();\n  }, []);\n  useEffect(() => {\n    const listener = Keyboard.addListener(\n      `keyboard${availableOSEventType}Show`,\n      (e) => {\n        Animated.timing(height.current, {\n          toValue: -e.endCoordinates.height,\n          duration: e.duration !== 0 ? e.duration : 300,\n          easing: Easing.bezier(0.4, 0.0, 0.2, 1),\n          useNativeDriver: true,\n        }).start();\n\n        return () => listener.remove();\n      }\n    );\n  }, []);\n  useEffect(() => {\n    const listener = Keyboard.addListener(\n      `keyboard${availableOSEventType}Hide`,\n      (e) => {\n        Animated.timing(height.current, {\n          toValue: 0,\n          duration: e.duration !== 0 ? e.duration : 300,\n          easing: Easing.bezier(0.4, 0.0, 0.2, 1),\n          useNativeDriver: true,\n        }).start();\n\n        return () => listener.remove();\n      }\n    );\n  }, []);\n\n  return animation;\n};\n\nconst IOS_SPRING_CONFIG = {\n  damping: 500,\n  stiffness: 1000,\n  mass: 3,\n  overshootClamping: true,\n  restDisplacementThreshold: 10,\n  restSpeedThreshold: 10,\n};\n\n/**\n * A close replica to native iOS keyboard animation. The problem is that\n * iOS (unlike Android) can not fire events for each keyboard frame movement.\n * As a result we can not get gradual values (for example, for progress it always\n * will be 1 or 0). So if you want to rely on gradual values you will need to use\n * this replica.\n *\n * The transition is hardcoded and may vary from one to another OS versions. But it\n * seems like last time it has been changed in iOS 7. Since RN supports at least iOS\n * 11 it doesn't make sense to replicate iOS 7 behavior. If it changes in next OS\n * versions, then this implementation should be revisited and reflect necessary changes.\n *\n * @returns {height, progress} - animated values\n */\nexport const useReanimatedKeyboardAnimationReplica = () => {\n  const height = useSharedValue(0);\n  const heightEvent = useSharedValue(0);\n\n  const progress = useDerivedValue(() => height.value / heightEvent.value);\n\n  const handler = useWorkletCallback((_height: number) => {\n    heightEvent.value = _height;\n  }, []);\n\n  useAnimatedReaction(\n    () => ({\n      _keyboardHeight: heightEvent.value,\n    }),\n    (result, _previousResult) => {\n      const { _keyboardHeight } = result;\n      const _previousKeyboardHeight = _previousResult?._keyboardHeight;\n\n      if (_keyboardHeight !== _previousKeyboardHeight) {\n        height.value = withSpring(_keyboardHeight, IOS_SPRING_CONFIG);\n      }\n    },\n    []\n  );\n\n  useEffect(() => {\n    const show = Keyboard.addListener('keyboardWillShow', (e) => {\n      runOnUI(handler)(-e.endCoordinates.height);\n    });\n    const hide = Keyboard.addListener('keyboardWillHide', () => {\n      runOnUI(handler)(0);\n    });\n\n    return () => {\n      show.remove();\n      hide.remove();\n    };\n  }, []);\n\n  return { height, progress };\n};\n\nexport const useGradualKeyboardAnimation =\n  Platform.OS === 'ios'\n    ? useReanimatedKeyboardAnimationReplica\n    : useReanimatedKeyboardAnimation;\n"],"mappings":"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"}